# GAI Final Project - Environment Configuration
# Copy this file to .env and configure your settings

# ===== REQUIRED =====
# OpenAI API Key (required for all functionality)
OPENAI_API_KEY=your_openai_api_key_here

# ===== MODEL CONFIGURATION =====
# Core Agent Model (handles main conversation logic)
CORE_AGENT_MODEL=gpt-3.5-turbo

# Exit Advisor Models
# If you have a fine-tuned Exit Advisor model, set it here:
# EXIT_ADVISOR_FINE_TUNED_MODEL=ft:gpt-3.5-turbo-0125:your-org:exit-advisor:your-model-id
# If not set, will use fallback model:
EXIT_ADVISOR_FINE_TUNED_MODEL=
EXIT_ADVISOR_FALLBACK_MODEL=gpt-3.5-turbo

# Scheduling Advisor Model
SCHEDULING_ADVISOR_MODEL=gpt-3.5-turbo

# Info Advisor Model (for future Phase 3)
INFO_ADVISOR_MODEL=gpt-3.5-turbo

# Legacy model setting (deprecated - use specific agent models above)
OPENAI_MODEL=gpt-3.5-turbo

# ===== MODEL PARAMETERS =====
# Model temperature (0.0 = deterministic, 1.0 = creative)
OPENAI_TEMPERATURE=0.7
# Maximum tokens per response
OPENAI_MAX_TOKENS=1000

# ===== APPLICATION SETTINGS =====
# Environment (development, staging, production)
ENVIRONMENT=development
# Enable debug logging
DEBUG=true
# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# ===== DATABASE CONFIGURATION =====
# Database URL (if not set, uses SQLite in data/ directory)
# DATABASE_URL=sqlite:///path/to/your/database.db
# DATABASE_URL=postgresql://user:password@localhost:5432/recruitment_db
DATABASE_URL=

# ===== STREAMLIT CONFIGURATION =====
# Streamlit server settings
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=localhost

# ===== CONVERSATION SETTINGS =====
# Maximum conversation history to keep
MAX_CONVERSATION_HISTORY=10
# Session timeout in minutes
SESSION_TIMEOUT_MINUTES=30

# ===== SCHEDULING SETTINGS =====
# Default interview duration in minutes
DEFAULT_INTERVIEW_DURATION_MINUTES=60
# Maximum slots to show to user
MAX_SLOTS_TO_SHOW=5
# How many days ahead to show available slots
SCHEDULING_DAYS_AHEAD=14

# ===== FINE-TUNING SETUP GUIDE =====
# To set up fine-tuned models:
# 1. Train your Exit Advisor model using fine_tuning/exit_advisor_tuning.py
# 2. Copy the model ID from OpenAI (format: ft:gpt-3.5-turbo-0125:org:name:id)
# 3. Set EXIT_ADVISOR_FINE_TUNED_MODEL to your model ID
# 4. Test with your specific use cases
# 
# Example fine-tuned model ID:
# EXIT_ADVISOR_FINE_TUNED_MODEL=ft:gpt-3.5-turbo-0125:personal:exit-advisor:Bf2tZ7BF 